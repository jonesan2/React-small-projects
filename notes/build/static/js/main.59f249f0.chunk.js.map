{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","notes","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","App","useState","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCK3BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,KCOQC,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2G,gBCVAC,EAAU,aAyBDC,EAFD,CAAEC,OArBD,WACb,IAAMC,EAAUC,IAAMC,IAAIL,GACpBM,EAAc,CAClBC,GAAI,IACJhB,QAAS,mCACTiB,KAAM,2BACNnB,WAAW,GAEb,OAAOc,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa/BO,OAVT,SAAAC,GAEb,OADgBV,IAAMW,KAAKf,EAASc,GACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQXK,OALjB,SAACT,EAAIO,GAElB,OADgBV,IAAMa,IAAN,UAAajB,EAAb,YAAwBO,GAAMO,GAC/BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCsE5BO,EArFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTlB,EADS,KACFmB,EADE,OAEcD,mBAAS,IAFvB,mBAETE,EAFS,KAEAC,EAFA,OAGcH,oBAAS,GAHvB,mBAGTI,EAHS,KAGAC,EAHA,OAIwBL,mBAAS,MAJjC,mBAITM,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,EACG1B,SACAO,MAAK,SAAAoB,GACJT,EAASS,QAEZ,IAEH,IAwCMC,EAAcP,EAChBtB,EACAA,EAAM8B,QAAO,SAAA7C,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS+B,IACvB,8BACE,yBAAQjC,QAAS,kBAAMgC,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAC9C,EAAM+C,GAAP,OACf,cAAC,EAAD,CAEE/C,KAAMA,EACNC,iBAAkB,kBAtCD,SAACoB,GAC1B,IAAMrB,EAAOe,EAAMiC,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChC6B,EAAW,2BAAQlD,GAAR,IAAcG,WAAYH,EAAKG,YAEhDuC,EACGZ,OAAOT,EAAI6B,GACX3B,MAAK,SAAA4B,GACJjB,EAASnB,EAAM+B,KAAI,SAAA9C,GAAI,OAAIA,EAAKqB,KAAOA,EAAKrB,EAAOmD,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,SAAD,OACJxC,EAAKK,QADD,sCAGfiD,YAAW,WACTd,EAAgB,QACf,KACHN,EAASnB,EAAM8B,QAAO,SAAAI,GAAC,OAAIA,EAAE5B,KAAOA,SAsBRkC,CAAmBvD,EAAKqB,MAF3C0B,QAMX,uBAAMS,SA9DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtD,QAAS8B,EACTb,MAAM,IAAIsC,MAAOC,cACjB1D,UAAW2D,KAAKC,SAAW,IAG7BrB,EACGf,OAAOgC,GACPpC,MAAK,SAAA4B,GACJjB,EAASnB,EAAMW,OAAOyB,IACtBf,EAAW,QAkDb,UACE,uBAAO4B,MAAO7B,EAAS8B,SA/CJ,SAACR,GACxBrB,EAAWqB,EAAMS,OAAOF,UA+CpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MC/ENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.59f249f0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important';\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n}\n\nexport default Note;","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n    </div>\n  )\n}\n\nexport default Footer;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting));\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n}\n\nconst notes = { getAll, create, update, }\n\nexport default notes;","import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification'\nimport Footer from './components/Footer';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setNewNote('');\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id));\n      });\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) => \n          <Note \n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App","// part0 project\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}